#!/usr/bin/bash
1.ssh简介
SSH是一种网络协议，用于计算机之间的加密登录。最早的时候，互联网通信都是明文通信，一旦被截获，内容就暴露无疑。
1995年，芬兰学者Tatu Ylonen设计了SSH协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为Linux系统的标准配置。

2.SSH登陆原理
(1).客户端 发送 登录请求 到服务端
(2).服务端发送服务端的公钥到客户端
(3).客户端使用公钥加密登录信息并发送到服务端
(4).服务端使用私钥解密登录信息，验证并登录

3.SSH基本用法
远程登录
ssh -p 22 root@remotehost

4.SSH端口转发
将TCP端口的网络数据，转发到指定的主机某个端口上，在转发的同时会对数据进行相应的加密及解密
如果工作环境中的防火墙限制了一些网络端口的使用，但是允许 SSH 的连接，那么也是能够通过使用SSH转发后的端口进行通信。
转发，主要分为本地转发与远程转发两种类型。
(1).转发的参数
-C 压缩数据
-f 后台认证用户/密码，通常和-N连用，不用登录到远程主机
-N 不执行脚本或命令，通常与-f连用
-g 在-L/-R/-D参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接
-L 本地端口：目标IP：目标端口
-D 动态端口转发
-R 远程端口转发
-T 不分配TTY只做代理用
-q 安静模式，不输出 错误/警告 信息

(2).本地转发
将本地的请求转发到远程主机上
格式：
ssh -L 本地网卡地址:本地端口:目标地址:目标端口 用户@目标地址

A 192.168.116.128
B 192.168.116.129 B上有个MySQL，且仅允许本地访问
在A上访问B上的数据库
ssh -L 127.0.0.1:3306:127.0.0.1:3306 root@192.168.116.129
意为：
	将本地的3306端口转发到192.168.116.129的3306端口
简写为： # 前提是，（1）是本地网卡，（2）用户相同
	ssh -L 3306:127.0.0.1:3306 192.168.116.129
从A访问B的MySQL
 bin/mysql -h127.0.0.1 -uroot -p

(3).远程转发 
将两个不相通的远程主机连接起来
ssh -R 远程网卡地址:远程端口:目标地址:目标端口
A 192.168.116.128
B 192.168.116.129
C 192.168.115.128

假设B与C不能直接相连，但是A和B，A和C可以相连，在A上开启转发
ssh -R 127.0.0.1:80:192.168.115.128:80 root@192.168.116.129

5.SSH的远程操作
ssh user@ipaddress 'command'

# 将本机的test目录传送到远程主机
tar -cz test | ssh user@host 'tar -xz'
# 也可以用rz及scp命令

ssh user@host 'netstat -tln|grep 80'

6.SSH的本地转发
# 将发到本地的某个端口请求，转发到远程的某台机器上面
ssh -L 本地地址:本地端口:远程地址:远程端口 远程用户@远程地址

A 192.168.116.128
B 192.168.116.129 在B机器上面有Nginx服务，要求在A上也能使用
# 在A上做如下配置
ssh -L -f -N 127.0.0.1:80:192.168.116.129:80 root@192.168.116.129

7.SSH的远程转发
# 将发送给远程机器的某个端口请求，转发到本地的机器上面
ssh -R 远程地址:远程端口:本地地址:本地端口 远程用户@远程地址
ssh -f -N -R 192.168.116.129:80:127.0.0.1:80 root@192.168.116.129

# 利用远程转发做代理功能
# 1.修改SSH配置 /etc/sshd/sshd_config ，将监听地址由127.0.0.1改为0.0.0.0
GatewayPorts yes 

C B->A

C不能访问A
但是B可以访问A
设置动态转发
在B上配置：
ssh -f -g -N -R A:80:B:80 user@A 

在C机器上面，模拟curl请求
curl -x A:80 127.0.0.1

9.SSH的动态转发
ssh -D 本地地址:本地端口号 远程用户@远程地址
